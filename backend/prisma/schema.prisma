// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// ENUMS

enum Role {
  user
  admin
}

enum AppointmentStatus {
  pending
  confirmed
  completed
  canceled
}

// MODELS

model Invitation {
  id String @id @default(uuid())
  token String @unique @db.Text
  email String
  userId String @unique
  user User @relation(fields: [userId], references: [id])

  @@map("invitation")
}

model Token {
  id String @id @default(uuid())
  token String @unique @db.Text
  userId String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("token")
}

model User {
  id String @id @default(uuid())
  email String @unique
  password String
  first_name String
  last_name String
  avatar String? 
  invitation Invitation?
  token Token?
  role Role @default(user) 
  appointments Appointment[]

  @@map("user")
}


model Appointment {
  id String @id @default(uuid())
  title String
  status AppointmentStatus @default(pending)
  userId String?
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  external_client String? 

  @@map("appointment")
} 

